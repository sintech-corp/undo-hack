"""

Revision ID: 9dbf60a2b9ee
Revises: 
Create Date: 2023-11-12 10:27:45.598660

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9dbf60a2b9ee'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('energy_types',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ru_name', sa.String(), nullable=False),
    sa.Column('en_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ru_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_staff', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ru_name', sa.String(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('localities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ru_name', sa.String(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compensation_requests',
    sa.Column('is_anomaly', sa.Boolean(), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=False),
    sa.Column('idnp', sa.String(), nullable=True),
    sa.Column('main_heating_type_id', sa.UUID(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('locality_id', sa.Integer(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.Integer(), nullable=True),
    sa.Column('sex', sa.Integer(), nullable=True),
    sa.Column('average_income', sa.Integer(), nullable=True),
    sa.Column('provider_name', sa.String(), nullable=True),
    sa.Column('consumption_november', sa.Integer(), nullable=True),
    sa.Column('consumption_december', sa.Integer(), nullable=True),
    sa.Column('consumption_january', sa.Integer(), nullable=True),
    sa.Column('consumption_february', sa.Integer(), nullable=True),
    sa.Column('consumption_march', sa.Integer(), nullable=True),
    sa.Column('number_of_residents', sa.Integer(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('age_range', sa.String(), nullable=False),
    sa.Column('salary_range', sa.String(), nullable=False),
    sa.Column('salary_range_encoded', sa.Integer(), nullable=False),
    sa.Column('age_range_encoded', sa.Integer(), nullable=False),
    sa.Column('locality_encoded', sa.Integer(), nullable=False),
    sa.Column('main_heating_type_encoded', sa.Integer(), nullable=False),
    sa.Column('company_encoded', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['locality_id'], ['localities.id'], ),
    sa.ForeignKeyConstraint(['main_heating_type_id'], ['energy_types.uid'], ),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('compensation_request_grades',
    sa.Column('old_value', sa.Integer(), nullable=True),
    sa.Column('new_value', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('auto_set', sa.Boolean(), nullable=False),
    sa.Column('compensation_request_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.uid'], ),
    sa.ForeignKeyConstraint(['compensation_request_id'], ['compensation_requests.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('compensation_request_grades')
    op.drop_table('compensation_requests')
    op.drop_table('localities')
    op.drop_table('cities')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('states')
    op.drop_table('energy_types')
    # ### end Alembic commands ###
